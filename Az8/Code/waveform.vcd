$date
	Sun Aug 27 23:55:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module pipeline_TB $end
$var reg 1 ! clk $end
$var reg 1 " rstN $end
$scope module pipeline $end
$var wire 1 ! clk $end
$var wire 1 " rstN $end
$var wire 16 # mem_read2 [15:0] $end
$var wire 16 $ mem_read1 [15:0] $end
$var wire 2 % inst_op [1:0] $end
$var wire 5 & inst_addr3 [4:0] $end
$var wire 5 ' inst_addr2 [4:0] $end
$var wire 5 ( inst_addr1 [4:0] $end
$var wire 16 ) alu_res [15:0] $end
$var reg 5 * addr1 [4:0] $end
$var reg 5 + addr2 [4:0] $end
$var reg 5 , addr3 [4:0] $end
$var reg 5 - buff2_addr3 [4:0] $end
$var reg 5 . buff_addr3 [4:0] $end
$var reg 2 / buff_op [1:0] $end
$var reg 2 0 op [1:0] $end
$var reg 16 1 read1 [15:0] $end
$var reg 16 2 read2 [15:0] $end
$var reg 16 3 write [15:0] $end
$scope module alu $end
$var wire 16 4 a [15:0] $end
$var wire 16 5 b [15:0] $end
$var wire 2 6 op [1:0] $end
$var wire 16 7 res [15:0] $end
$var wire 16 8 mul_res [15:0] $end
$var wire 16 9 addsub_res [15:0] $end
$scope module addsub $end
$var wire 16 : a [15:0] $end
$var wire 16 ; b [15:0] $end
$var wire 1 < op $end
$var wire 16 = c [15:0] $end
$upscope $end
$scope module multiply $end
$var wire 16 > a [15:0] $end
$var wire 16 ? b [15:0] $end
$var wire 16 @ c [15:0] $end
$upscope $end
$upscope $end
$scope module inst $end
$var wire 1 ! clk $end
$var wire 1 " rstN $end
$var wire 2 A op [1:0] $end
$var wire 5 B addr3 [4:0] $end
$var wire 5 C addr2 [4:0] $end
$var wire 5 D addr1 [4:0] $end
$var reg 5 E pc [5:1] $end
$upscope $end
$scope module mem $end
$var wire 5 F addr1 [4:0] $end
$var wire 5 G addr2 [4:0] $end
$var wire 5 H addr3 [4:0] $end
$var wire 16 I read1 [15:0] $end
$var wire 16 J read2 [15:0] $end
$var wire 16 K write [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx K
bx J
bx I
bx H
bx G
bx F
b0 E
b1010 D
b10111 C
b111 B
b10 A
bx @
bx ?
bx >
bx =
x<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
b1010 (
b10111 '
b111 &
b10 %
bx $
bx #
0"
1!
$end
#5
0!
#10
1!
#15
0!
#20
b11 &
b11 B
b10111 (
b10111 D
b1 '
b1 C
b1 E
b111 .
b10 /
b1111111011111110 #
b1111111011111110 J
b10111 +
b10111 G
b100000010 $
b100000010 I
b1010 *
b1010 F
1!
1"
#25
0!
#30
b1111111100000000 9
b1111111100000000 =
b1011111010 )
b1011111010 7
0<
b1011111010 8
b1011111010 @
b1011 &
b1011 B
b1 (
b1 D
b10111 '
b10111 C
b111 -
b10 0
b10 6
b1111111011111110 2
b1111111011111110 5
b1111111011111110 ;
b1111111011111110 ?
b100000010 1
b100000010 4
b100000010 :
b100000010 >
b11 .
b111000001001 #
b111000001001 J
b1 +
b1 G
b1111111011111110 $
b1111111011111110 I
b10111 *
b10111 F
b10 E
1!
#35
0!
#40
b110000000111 9
b110000000111 =
b1111011011010010 )
b1111011011010010 7
b11011 &
b11011 B
b1010 (
b1010 D
b1001 '
b1001 C
b1111011011010010 8
b1111011011010010 @
b11 E
b1011111010 3
b1011111010 K
b111 ,
b111 H
b11 -
b111000001001 2
b111000001001 5
b111000001001 ;
b111000001001 ?
b1111111011111110 1
b1111111011111110 4
b1111111011111110 :
b1111111011111110 >
b1011 .
b1111111011111110 #
b1111111011111110 J
b10111 +
b10111 G
b111000001001 $
b111000001001 I
b1 *
b1 F
1!
#45
0!
#50
b1111011011010010 8
b1111011011010010 @
b0 %
b0 A
b10 &
b10 B
b111 (
b111 D
b10010 '
b10010 C
b1111011011010010 3
b1111011011010010 K
b11 ,
b11 H
b1011 -
b1111111011111110 2
b1111111011111110 5
b1111111011111110 ;
b1111111011111110 ?
b111000001001 1
b111000001001 4
b111000001001 :
b111000001001 >
b11011 .
b1111111011011101 #
b1111111011011101 J
b1001 +
b1001 G
b100000010 $
b100000010 I
b1010 *
b1010 F
b100 E
1!
#55
0!
#60
b1111111111011111 9
b1111111111011111 =
b100010011011001 )
b100010011011001 7
b1000 &
b1000 B
b11011 (
b11011 D
b1111 '
b1111 C
b100010011011001 8
b100010011011001 @
b101 E
b1011 ,
b1011 H
b11011 -
b1111111011011101 2
b1111111011011101 5
b1111111011011101 ;
b1111111011011101 ?
b100000010 1
b100000010 4
b100000010 :
b100000010 >
b10 .
b0 /
b1100010011100101 #
b1100010011100101 J
b10010 +
b10010 G
b1011111010 $
b1011111010 I
b111 *
b111 F
1!
#65
0!
#70
b1100011011011111 9
b1100011011011111 =
b1100011011011111 )
b1100011011011111 7
b1110011000110010 8
b1110011000110010 @
b10 &
b10 B
b111 (
b111 D
b1001 '
b1001 C
b100010011011001 3
b100010011011001 K
b11011 ,
b11011 H
b10 -
b0 0
b0 6
b1100010011100101 2
b1100010011100101 5
b1100010011100101 ;
b1100010011100101 ?
b1011111010 1
b1011111010 4
b1011111010 :
b1011111010 >
b1000 .
b1011111111001 #
b1011111111001 J
b1111 +
b1111 G
b100010011011001 $
b100010011011001 I
b11011 *
b11011 F
b110 E
1!
#75
0!
#80
b101101111010010 )
b101101111010010 7
b101101111010010 9
b101101111010010 =
b101 &
b101 B
b1011 (
b1011 D
b10001 '
b10001 C
b101110100011 8
b101110100011 @
b111 E
b1100011011011111 3
b1100011011011111 K
b10 ,
b10 H
b1000 -
b1011111111001 2
b1011111111001 5
b1011111111001 ;
b1011111111001 ?
b100010011011001 1
b100010011011001 4
b100010011011001 :
b100010011011001 >
b10 .
b1111111011011101 #
b1111111011011101 J
b1001 +
b1001 G
b1011111010 $
b1011111010 I
b111 *
b111 F
1!
#85
0!
#90
b11010111 )
b11010111 7
b11010111 9
b11010111 =
b10101011000110 8
b10101011000110 @
b1 %
b1 A
b110 &
b110 B
b1 (
b1 D
b1000 '
b1000 C
b101101111010010 3
b101101111010010 K
b1000 ,
b1000 H
b10 -
b1111111011011101 2
b1111111011011101 5
b1111111011011101 ;
b1111111011011101 ?
b1011111010 1
b1011111010 4
b1011111010 :
b1011111010 >
b101 .
b101100100110110 #
b101100100110110 J
b10001 +
b10001 G
b1111011011010010 $
b1111011011010010 I
b1011 *
b1011 F
b1000 E
1!
#95
0!
#100
b100111100001000 )
b100111100001000 7
b100111100001000 9
b100111100001000 =
b10110 &
b10110 B
b10011 (
b10011 D
b11101011100110 8
b11101011100110 @
b1001 E
b11010111 3
b11010111 K
b10 ,
b10 H
b101 -
b101100100110110 2
b101100100110110 5
b101100100110110 ;
b101100100110110 ?
b1111011011010010 1
b1111011011010010 4
b1111011011010010 :
b1111011011010010 >
b110 .
b1 /
b101101111010010 #
b101101111010010 J
b1000 +
b1000 G
b111000001001 $
b111000001001 I
b1 *
b1 F
1!
#105
0!
#110
b1011001100110111 )
b1011001100110111 7
b1011001100110111 9
b1011001100110111 =
1<
b1001100010101111 8
b1001100010101111 @
b11100 &
b11100 B
b11111 (
b11111 D
b101 '
b101 C
b100111100001000 3
b100111100001000 K
b101 ,
b101 H
b110 -
b1 0
b1 6
b101101111010010 2
b101101111010010 5
b101101111010010 ;
b101101111010010 ?
b111000001001 1
b111000001001 4
b111000001001 :
b111000001001 >
b10110 .
b1111011011001101 $
b1111011011001101 I
b10011 *
b10011 F
b1010 E
1!
#115
0!
#120
b1001101111111011 )
b1001101111111011 7
b1001101111111011 9
b1001101111111011 =
b11010 &
b11010 B
b1111 (
b1111 D
b10 '
b10 C
b100100010101011 8
b100100010101011 @
b1011 E
b1011001100110111 3
b1011001100110111 K
b110 ,
b110 H
b10110 -
b1111011011001101 1
b1111011011001101 4
b1111011011001101 :
b1111011011001101 >
b11100 .
b100111100001000 #
b100111100001000 J
b101 +
b101 G
b11110100000110 $
b11110100000110 I
b11111 *
b11111 F
1!
#125
0!
#130
b1110111011111110 )
b1110111011111110 7
b1110111011111110 9
b1110111011111110 =
b1010001111000010 8
b1010001111000010 @
b1011 &
b1011 B
b100 (
b100 D
b101 '
b101 C
b1001101111111011 3
b1001101111111011 K
b10110 ,
b10110 H
b11100 -
b100111100001000 2
b100111100001000 5
b100111100001000 ;
b100111100001000 ?
b11110100000110 1
b11110100000110 4
b11110100000110 :
b11110100000110 >
b11010 .
b11010111 #
b11010111 J
b10 +
b10 G
b1011111111001 $
b1011111111001 I
b1111 *
b1111 F
b1100 E
1!
#135
0!
#140
b1011100100010 )
b1011100100010 7
b1011100100010 9
b1011100100010 =
b1111 &
b1111 B
b10001 (
b10001 D
b1000 '
b1000 C
b1110000101010001 8
b1110000101010001 @
b1101 E
b1110111011111110 3
b1110111011111110 K
b11100 ,
b11100 H
b11010 -
b11010111 2
b11010111 5
b11010111 ;
b11010111 ?
b1011111111001 1
b1011111111001 4
b1011111111001 :
b1011111111001 >
b1011 .
b100111100001000 #
b100111100001000 J
b101 +
b101 G
b1100111100010001 $
b1100111100010001 I
b100 *
b100 F
1!
#145
0!
#150
b1000000000001001 )
b1000000000001001 7
b1000000000001001 9
b1000000000001001 =
b101100110110111 8
b101100110110111 @
b101 &
b101 B
b10100 (
b10100 D
b101 '
b101 C
b1011100100010 3
b1011100100010 K
b11010 ,
b11010 H
b1011 -
b100111100001000 2
b100111100001000 5
b100111100001000 ;
b100111100001000 ?
b1100111100010001 1
b1100111100010001 4
b1100111100010001 :
b1100111100010001 >
b1111 .
b101101111010010 #
b101101111010010 J
b1000 +
b1000 G
b101100100110110 $
b101100100110110 I
b10001 *
b10001 F
b1110 E
1!
#155
0!
#160
b1111111001100100 )
b1111111001100100 7
b1111111001100100 9
b1111111001100100 =
bx %
bx A
bx &
bx B
bx (
bx D
bx '
bx C
b101011100110100 8
b101011100110100 @
b1111 E
b1000000000001001 3
b1000000000001001 K
b1011 ,
b1011 H
b1111 -
b101101111010010 2
b101101111010010 5
b101101111010010 ;
b101101111010010 ?
b101100100110110 1
b101100100110110 4
b101100100110110 :
b101100100110110 >
b101 .
b100111100001000 #
b100111100001000 J
b101 +
b101 G
b1111111110011001 $
b1111111110011001 I
b10100 *
b10100 F
1!
#165
0!
#170
b1011000010010001 )
b1011000010010001 7
b1011000010010001 9
b1011000010010001 =
b1110100100101111 8
b1110100100101111 @
b1111111001100100 3
b1111111001100100 K
b1111 ,
b1111 H
b101 -
b100111100001000 2
b100111100001000 5
b100111100001000 ;
b100111100001000 ?
b1111111110011001 1
b1111111110011001 4
b1111111110011001 :
b1111111110011001 >
bx .
bx /
bx #
bx J
bx +
bx G
bx $
bx I
bx *
bx F
b10000 E
1!
#175
0!
#180
bx )
bx 7
bx 9
bx =
x<
bx 8
bx @
b10001 E
b1011000010010001 3
b1011000010010001 K
b101 ,
b101 H
bx -
bx 0
bx 6
bx 2
bx 5
bx ;
bx ?
bx 1
bx 4
bx :
bx >
1!
#185
0!
#190
bx 3
bx K
bx ,
bx H
b10010 E
1!
