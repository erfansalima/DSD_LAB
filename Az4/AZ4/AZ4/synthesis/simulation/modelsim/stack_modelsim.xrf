vendor_name = ModelSim
source_file = 1, D:/uni/summer/dsd/Az4/AZ4/AZ4/synthesis/stack.v
source_file = 1, D:/uni/summer/dsd/Az4/AZ4/AZ4/synthesis/db/stack.cbx.xml
design_name = stack
instance = comp, \Data_Out[0]~output\, Data_Out[0]~output, stack, 1
instance = comp, \Data_Out[1]~output\, Data_Out[1]~output, stack, 1
instance = comp, \Data_Out[2]~output\, Data_Out[2]~output, stack, 1
instance = comp, \Data_Out[3]~output\, Data_Out[3]~output, stack, 1
instance = comp, \Full~output\, Full~output, stack, 1
instance = comp, \Empty~output\, Empty~output, stack, 1
instance = comp, \Clk~input\, Clk~input, stack, 1
instance = comp, \Clk~inputclkctrl\, Clk~inputclkctrl, stack, 1
instance = comp, \count[0]~8\, count[0]~8, stack, 1
instance = comp, \Add0~0\, Add0~0, stack, 1
instance = comp, \Push~input\, Push~input, stack, 1
instance = comp, \Pop~input\, Pop~input, stack, 1
instance = comp, \Equal0~1\, Equal0~1, stack, 1
instance = comp, \count[2]~12\, count[2]~12, stack, 1
instance = comp, \count[3]~14\, count[3]~14, stack, 1
instance = comp, \Add0~2\, Add0~2, stack, 1
instance = comp, \Add0~4\, Add0~4, stack, 1
instance = comp, \Add0~6\, Add0~6, stack, 1
instance = comp, \count[3]~17\, count[3]~17, stack, 1
instance = comp, \RstN~input\, RstN~input, stack, 1
instance = comp, \RstN~inputclkctrl\, RstN~inputclkctrl, stack, 1
instance = comp, \count[4]~19\, count[4]~19, stack, 1
instance = comp, \Add0~8\, Add0~8, stack, 1
instance = comp, \count[4]~21\, count[4]~21, stack, 1
instance = comp, \count[4]\, count[4], stack, 1
instance = comp, \count[5]~22\, count[5]~22, stack, 1
instance = comp, \Add0~10\, Add0~10, stack, 1
instance = comp, \count[5]~24\, count[5]~24, stack, 1
instance = comp, \count[5]\, count[5], stack, 1
instance = comp, \count[6]~25\, count[6]~25, stack, 1
instance = comp, \Add0~12\, Add0~12, stack, 1
instance = comp, \count[6]~27\, count[6]~27, stack, 1
instance = comp, \count[6]\, count[6], stack, 1
instance = comp, \count[7]~28\, count[7]~28, stack, 1
instance = comp, \Add0~14\, Add0~14, stack, 1
instance = comp, \count[7]~30\, count[7]~30, stack, 1
instance = comp, \count[7]\, count[7], stack, 1
instance = comp, \Equal0~0\, Equal0~0, stack, 1
instance = comp, \Equal0~2\, Equal0~2, stack, 1
instance = comp, \count[7]~18\, count[7]~18, stack, 1
instance = comp, \count[3]\, count[3], stack, 1
instance = comp, \Equal1~0\, Equal1~0, stack, 1
instance = comp, \count[7]~16\, count[7]~16, stack, 1
instance = comp, \count[0]~31\, count[0]~31, stack, 1
instance = comp, \count[0]\, count[0], stack, 1
instance = comp, \count[1]~10\, count[1]~10, stack, 1
instance = comp, \count[1]~32\, count[1]~32, stack, 1
instance = comp, \count[1]\, count[1], stack, 1
instance = comp, \count[2]~33\, count[2]~33, stack, 1
instance = comp, \count[2]\, count[2], stack, 1
instance = comp, \Data_In[0]~input\, Data_In[0]~input, stack, 1
instance = comp, \Decoder0~10\, Decoder0~10, stack, 1
instance = comp, \Decoder0~5\, Decoder0~5, stack, 1
instance = comp, \stack[7][0]\, stack[7][0], stack, 1
instance = comp, \Decoder0~2\, Decoder0~2, stack, 1
instance = comp, \stack[5][0]\, stack[5][0], stack, 1
instance = comp, \stack[6][0]~feeder\, stack[6][0]~feeder, stack, 1
instance = comp, \Decoder0~3\, Decoder0~3, stack, 1
instance = comp, \stack[6][0]\, stack[6][0], stack, 1
instance = comp, \Decoder0~4\, Decoder0~4, stack, 1
instance = comp, \stack[4][0]\, stack[4][0], stack, 1
instance = comp, \Mux3~0\, Mux3~0, stack, 1
instance = comp, \Mux3~1\, Mux3~1, stack, 1
instance = comp, \Decoder0~9\, Decoder0~9, stack, 1
instance = comp, \stack[3][0]\, stack[3][0], stack, 1
instance = comp, \Decoder0~6\, Decoder0~6, stack, 1
instance = comp, \stack[2][0]\, stack[2][0], stack, 1
instance = comp, \Decoder0~7\, Decoder0~7, stack, 1
instance = comp, \stack[1][0]\, stack[1][0], stack, 1
instance = comp, \Decoder0~8\, Decoder0~8, stack, 1
instance = comp, \stack[0][0]\, stack[0][0], stack, 1
instance = comp, \Mux3~2\, Mux3~2, stack, 1
instance = comp, \Mux3~3\, Mux3~3, stack, 1
instance = comp, \Mux3~4\, Mux3~4, stack, 1
instance = comp, \Data_Out[0]~0\, Data_Out[0]~0, stack, 1
instance = comp, \Data_Out[0]~reg0\, Data_Out[0]~reg0, stack, 1
instance = comp, \Data_In[1]~input\, Data_In[1]~input, stack, 1
instance = comp, \stack[7][1]\, stack[7][1], stack, 1
instance = comp, \stack[5][1]\, stack[5][1], stack, 1
instance = comp, \stack[6][1]~feeder\, stack[6][1]~feeder, stack, 1
instance = comp, \stack[6][1]\, stack[6][1], stack, 1
instance = comp, \stack[4][1]\, stack[4][1], stack, 1
instance = comp, \Mux2~0\, Mux2~0, stack, 1
instance = comp, \Mux2~1\, Mux2~1, stack, 1
instance = comp, \stack[3][1]~feeder\, stack[3][1]~feeder, stack, 1
instance = comp, \stack[3][1]\, stack[3][1], stack, 1
instance = comp, \stack[2][1]\, stack[2][1], stack, 1
instance = comp, \stack[1][1]~feeder\, stack[1][1]~feeder, stack, 1
instance = comp, \stack[1][1]\, stack[1][1], stack, 1
instance = comp, \stack[0][1]\, stack[0][1], stack, 1
instance = comp, \Mux2~2\, Mux2~2, stack, 1
instance = comp, \Mux2~3\, Mux2~3, stack, 1
instance = comp, \Mux2~4\, Mux2~4, stack, 1
instance = comp, \Data_Out[1]~reg0\, Data_Out[1]~reg0, stack, 1
instance = comp, \Data_In[2]~input\, Data_In[2]~input, stack, 1
instance = comp, \stack[7][2]\, stack[7][2], stack, 1
instance = comp, \stack[5][2]\, stack[5][2], stack, 1
instance = comp, \stack[6][2]\, stack[6][2], stack, 1
instance = comp, \stack[4][2]\, stack[4][2], stack, 1
instance = comp, \Mux1~0\, Mux1~0, stack, 1
instance = comp, \Mux1~1\, Mux1~1, stack, 1
instance = comp, \stack[3][2]\, stack[3][2], stack, 1
instance = comp, \stack[2][2]\, stack[2][2], stack, 1
instance = comp, \stack[0][2]\, stack[0][2], stack, 1
instance = comp, \stack[1][2]\, stack[1][2], stack, 1
instance = comp, \Mux1~2\, Mux1~2, stack, 1
instance = comp, \Mux1~3\, Mux1~3, stack, 1
instance = comp, \Mux1~4\, Mux1~4, stack, 1
instance = comp, \Data_Out[2]~reg0\, Data_Out[2]~reg0, stack, 1
instance = comp, \Data_In[3]~input\, Data_In[3]~input, stack, 1
instance = comp, \stack[7][3]\, stack[7][3], stack, 1
instance = comp, \stack[5][3]\, stack[5][3], stack, 1
instance = comp, \stack[6][3]~feeder\, stack[6][3]~feeder, stack, 1
instance = comp, \stack[6][3]\, stack[6][3], stack, 1
instance = comp, \stack[4][3]\, stack[4][3], stack, 1
instance = comp, \Mux0~0\, Mux0~0, stack, 1
instance = comp, \Mux0~1\, Mux0~1, stack, 1
instance = comp, \stack[3][3]\, stack[3][3], stack, 1
instance = comp, \stack[2][3]\, stack[2][3], stack, 1
instance = comp, \stack[1][3]\, stack[1][3], stack, 1
instance = comp, \stack[0][3]\, stack[0][3], stack, 1
instance = comp, \Mux0~2\, Mux0~2, stack, 1
instance = comp, \Mux0~3\, Mux0~3, stack, 1
instance = comp, \Mux0~4\, Mux0~4, stack, 1
instance = comp, \Data_Out[3]~reg0\, Data_Out[3]~reg0, stack, 1
