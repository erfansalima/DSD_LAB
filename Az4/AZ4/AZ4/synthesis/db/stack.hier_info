|stack
Clk => Data_Out[0]~reg0.CLK
Clk => Data_Out[1]~reg0.CLK
Clk => Data_Out[2]~reg0.CLK
Clk => Data_Out[3]~reg0.CLK
Clk => stack[0][0].CLK
Clk => stack[0][1].CLK
Clk => stack[0][2].CLK
Clk => stack[0][3].CLK
Clk => stack[1][0].CLK
Clk => stack[1][1].CLK
Clk => stack[1][2].CLK
Clk => stack[1][3].CLK
Clk => stack[2][0].CLK
Clk => stack[2][1].CLK
Clk => stack[2][2].CLK
Clk => stack[2][3].CLK
Clk => stack[3][0].CLK
Clk => stack[3][1].CLK
Clk => stack[3][2].CLK
Clk => stack[3][3].CLK
Clk => stack[4][0].CLK
Clk => stack[4][1].CLK
Clk => stack[4][2].CLK
Clk => stack[4][3].CLK
Clk => stack[5][0].CLK
Clk => stack[5][1].CLK
Clk => stack[5][2].CLK
Clk => stack[5][3].CLK
Clk => stack[6][0].CLK
Clk => stack[6][1].CLK
Clk => stack[6][2].CLK
Clk => stack[6][3].CLK
Clk => stack[7][0].CLK
Clk => stack[7][1].CLK
Clk => stack[7][2].CLK
Clk => stack[7][3].CLK
Clk => count[0].CLK
Clk => count[1].CLK
Clk => count[2].CLK
Clk => count[3].CLK
Clk => count[4].CLK
Clk => count[5].CLK
Clk => count[6].CLK
Clk => count[7].CLK
RstN => stack[0][0].ACLR
RstN => stack[0][1].ACLR
RstN => stack[0][2].ACLR
RstN => stack[0][3].ACLR
RstN => stack[1][0].ACLR
RstN => stack[1][1].ACLR
RstN => stack[1][2].ACLR
RstN => stack[1][3].ACLR
RstN => stack[2][0].ACLR
RstN => stack[2][1].ACLR
RstN => stack[2][2].ACLR
RstN => stack[2][3].ACLR
RstN => stack[3][0].ACLR
RstN => stack[3][1].ACLR
RstN => stack[3][2].ACLR
RstN => stack[3][3].ACLR
RstN => stack[4][0].ACLR
RstN => stack[4][1].ACLR
RstN => stack[4][2].ACLR
RstN => stack[4][3].ACLR
RstN => stack[5][0].ACLR
RstN => stack[5][1].ACLR
RstN => stack[5][2].ACLR
RstN => stack[5][3].ACLR
RstN => stack[6][0].ACLR
RstN => stack[6][1].ACLR
RstN => stack[6][2].ACLR
RstN => stack[6][3].ACLR
RstN => stack[7][0].ACLR
RstN => stack[7][1].ACLR
RstN => stack[7][2].ACLR
RstN => stack[7][3].ACLR
RstN => count[0].ACLR
RstN => count[1].ACLR
RstN => count[2].ACLR
RstN => count[3].ACLR
RstN => count[4].ACLR
RstN => count[5].ACLR
RstN => count[6].ACLR
RstN => count[7].ACLR
RstN => Data_Out[0]~reg0.ENA
RstN => Data_Out[3]~reg0.ENA
RstN => Data_Out[2]~reg0.ENA
RstN => Data_Out[1]~reg0.ENA
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[0] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[1] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[2] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Data_In[3] => stack.DATAB
Push => always0.IN0
Push => always0.IN0
Pop => always0.IN1
Pop => always0.IN1
Data_Out[0] <= Data_Out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[1] <= Data_Out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[2] <= Data_Out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_Out[3] <= Data_Out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Full <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
Empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


